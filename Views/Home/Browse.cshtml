@model IEnumerable<FacilityManagement.Models.Facility>
@{
    ViewData["Title"] = "Browse Facilities";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Browse Available Storage Units</h2>
    <a asp-controller="User" asp-action="Create" class="btn btn-success">Register as New User</a>
</div>

<div class="row">
    @if (Model.Any())
    {
        @foreach (var facility in Model)
        {
            var availableUnits = facility.StorageUnits.Where(u => !u.IsOccupied).ToList();

            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <h5 class="card-title mb-0">@facility.Name</h5>
                        <small class="text-muted">Owner: @facility.Owner.FullName</small>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(facility.Description))
                        {
                            <p class="card-text">@facility.Description</p>
                        }

                        <p class="card-text">
                            <strong>Address:</strong><br>
                            @facility.Address<br>
                            @if (!string.IsNullOrEmpty(facility.City))
                            {
                                <span>@facility.City @facility.PostalCode</span>
                            }
                        </p>

                        <div class="mb-3">
                            <span class="badge bg-success">@availableUnits.Count Available Units</span>
                            <span class="badge bg-secondary">@facility.StorageUnits.Count Total Units</span>
                        </div>

                        @if (availableUnits.Any())
                        {
                            <h6>Available Units:</h6>
                            <div class="list-group list-group-flush">
                                @foreach (var unit in availableUnits.Take(3))
                                {
                                    <div class="list-group-item px-0 py-2">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <strong>Unit @unit.UnitNumber</strong>
                                                <br><small>@unit.SizeSquareMeters mÂ² - $@unit.MonthlyPrice/month</small>
                                            </div>
                                            @if (User.Identity!.IsAuthenticated)
                                            {
                                                <form asp-controller="StorageUnit" asp-action="Occupy" asp-route-id="@unit.Id" method="post" style="display: inline;">
                                                    <input type="hidden" name="occupantId" value="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value" />
                                                    <button type="submit" class="btn btn-sm btn-primary">Occupy</button>
                                                </form>
                                            }
                                            else
                                            {
                                                <a asp-controller="Account" asp-action="Login" class="btn btn-sm btn-outline-primary">Login to Occupy</a>
                                            }
                                        </div>
                                    </div>
                                }
                                @if (availableUnits.Count > 3)
                                {
                                    <div class="list-group-item px-0 py-2 text-center">
                                        <a asp-controller="Facility" asp-action="Details" asp-route-id="@facility.Id"
                                            class="btn btn-sm btn-outline-primary">
                                            View All @availableUnits.Count Units
                                        </a>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No available units at this facility.</p>
                        }
                    </div>
                    <div class="card-footer">
                        <a asp-controller="Facility" asp-action="Details" asp-route-id="@facility.Id"
                            class="btn btn-outline-info btn-sm">
                            View Details
                        </a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="text-center py-5">
                <h4>No Facilities Available</h4>
                <p class="text-muted">There are currently no facilities with available storage units.</p>
                <a asp-controller="Facility" asp-action="Create" class="btn btn-primary">Create a Facility</a>
            </div>
        </div>
    }
</div>

<!-- Modal for occupying a unit -->
<div class="modal fade" id="occupyModal" tabindex="-1" aria-labelledby="occupyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="occupyModalLabel">Occupy Storage Unit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="occupyForm" method="post">
                <div class="modal-body">
                    <p>You are about to occupy <strong id="unitInfo"></strong>.</p>

                    <div class="mb-3">
                        <label for="occupantSelect" class="form-label">Select User:</label>
                        <select class="form-select" id="occupantSelect" name="occupantId" required>
                            <option value="">Choose a user...</option>
                            <!-- Users will be loaded dynamically -->
                        </select>
                    </div>

                    <div class="alert alert-info">
                        <small>If you don't see your name in the list, please <a asp-controller="User"
                                asp-action="Create" target="_blank">register as a new user</a> first.</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Occupy Unit</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentUnitId = null;

        function occupyUnit(unitId, unitNumber, facilityName) {
            currentUnitId = unitId;
            document.getElementById('unitInfo').textContent = `Unit ${unitNumber} at ${facilityName}`;
            document.getElementById('occupyForm').action = `/StorageUnit/Occupy/${unitId}`;

            // Load users for the dropdown
            loadUsers();

            // Show modal
            new bootstrap.Modal(document.getElementById('occupyModal')).show();
        }

        function loadUsers() {
            // In a real application, you would fetch this from an API endpoint
            // For now, we'll use a simple approach
            fetch('/User')
                .then(response => response.text())
                .then(html => {
                    // This is a simplified approach - in production you'd want a proper API endpoint
                    const select = document.getElementById('occupantSelect');
                    select.innerHTML = '<option value="">Choose a user...</option>';

                    // You would populate this with actual user data from an API
                    // For demonstration, we'll add a note
                    select.innerHTML += '<option value="" disabled>Please create users first via Admin panel</option>';
                })
                .catch(error => {
                    console.error('Error loading users:', error);
                });
        }
    </script>
}
