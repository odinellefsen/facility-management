@model FacilityManagement.Models.StorageUnit
@{
    ViewData["Title"] = "Create Storage Unit";
}

<h2>Create New Storage Unit</h2>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <form asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @Html.AntiForgeryToken()

                    @if (ViewBag.SelectedFacilityId != null)
                    {
                        <!-- Hidden field for facility ID when coming from a specific facility -->
                        <input type="hidden" asp-for="FacilityId" value="@ViewBag.SelectedFacilityId" />
                        <div class="mb-3">
                            <label class="form-label">Facility</label>
                            <input type="text" class="form-control" value="@ViewBag.FacilityName" readonly />
                            <small class="form-text text-muted">Creating storage unit for this facility</small>
                        </div>
                    }
                    else
                    {
                        <!-- This shouldn't happen if we only allow creation from facility pages -->
                        <div class="alert alert-warning">
                            <strong>Error:</strong> Storage units can only be created from a facility page.
                            <a asp-controller="Facility" asp-action="Index" class="btn btn-sm btn-primary ms-2">Go to
                                Facilities</a>
                        </div>
                        <input type="hidden" asp-for="FacilityId" value="" />
                    }

                    <div class="mb-3">
                        <label asp-for="UnitNumber" class="form-label"></label>
                        <input asp-for="UnitNumber" class="form-control" />
                        <span asp-validation-for="UnitNumber" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="SizeSquareMeters" class="form-label">Size (Square Meters)</label>
                        <input asp-for="SizeSquareMeters" class="form-control" type="number" step="0.1" />
                        <span asp-validation-for="SizeSquareMeters" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="MonthlyPrice" class="form-label">Monthly Price ($)</label>
                        <input asp-for="MonthlyPrice" class="form-control" type="number" step="0.01" />
                        <span asp-validation-for="MonthlyPrice" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <button type="submit" class="btn btn-primary">Create Storage Unit</button>
                        @if (ViewBag.SelectedFacilityId != null)
                        {
                            <a asp-controller="Facility" asp-action="Details" asp-route-id="@ViewBag.SelectedFacilityId"
                                class="btn btn-secondary">Back to Facility</a>
                        }
                        else
                        {
                            <a asp-controller="Facility" asp-action="Index" class="btn btn-secondary">Back to Facilities</a>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
