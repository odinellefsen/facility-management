@model FacilityManagement.Models.StorageUnit
@{
    ViewData["Title"] = "Delete Storage Unit";
}

<h2>Delete Storage Unit</h2>

<div class="alert alert-danger" role="alert">
    <strong>Warning!</strong> Are you sure you want to delete this storage unit? This action cannot be undone.
    @if (Model.IsOccupied)
    {
        <br />
        <strong>Note:</strong>
        @:This unit is currently occupied and will need to be vacated first.
    }
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>Storage Unit Details</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Unit Number:</dt>
                    <dd class="col-sm-8"><strong>@Model.UnitNumber</strong></dd>

                    <dt class="col-sm-4">Facility:</dt>
                    <dd class="col-sm-8">@Model.Facility.Name</dd>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <dt class="col-sm-4">Description:</dt>
                        <dd class="col-sm-8">@Model.Description</dd>
                    }

                    <dt class="col-sm-4">Size:</dt>
                    <dd class="col-sm-8">@Model.SizeSquareMeters mÂ²</dd>

                    <dt class="col-sm-4">Monthly Price:</dt>
                    <dd class="col-sm-8">$@Model.MonthlyPrice</dd>

                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8">
                        @if (Model.IsOccupied)
                        {
                            <span class="badge bg-warning text-dark">Occupied</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Available</span>
                        }
                    </dd>

                    @if (Model.IsOccupied && Model.Occupant != null)
                    {
                        <dt class="col-sm-4">Occupant:</dt>
                        <dd class="col-sm-8">
                            @Model.Occupant.FullName
                            <br><small class="text-muted">@Model.Occupant.Email</small>
                        </dd>

                        <dt class="col-sm-4">Occupied Since:</dt>
                        <dd class="col-sm-8">@Model.OccupiedAt?.ToString("MMMM dd, yyyy")</dd>
                    }

                    <dt class="col-sm-4">Created:</dt>
                    <dd class="col-sm-8">@Model.CreatedAt.ToString("MMMM dd, yyyy")</dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6>Impact of Deletion</h6>
            </div>
            <div class="card-body">
                @if (Model.IsOccupied)
                {
                    <div class="alert alert-warning">
                        <strong>Occupied Unit!</strong>
                        <p>This unit is currently occupied by <strong>@Model.Occupant?.FullName</strong>.</p>
                        <p>You should vacate the unit first before deletion, or the occupant will lose access to their
                            storage.</p>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <strong>Available Unit</strong>
                        <p>This unit is currently available and can be safely deleted.</p>
                    </div>
                }

                <p><strong>What will be deleted:</strong></p>
                <ul>
                    <li>Unit @Model.UnitNumber</li>
                    <li>All unit configuration</li>
                    <li>Occupancy history</li>
                </ul>
            </div>
        </div>

        @if (Model.IsOccupied)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6>Alternative Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <form asp-action="Vacate" asp-route-id="@Model.Id" method="post">
                            <button type="submit" class="btn btn-outline-warning btn-sm w-100"
                                onclick="return confirm('Vacate this unit first?')">
                                Vacate Unit First
                            </button>
                        </form>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-info btn-sm">Edit Instead</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<form asp-action="Delete" method="post" class="mt-4">
    <input type="hidden" asp-for="Id" />
    <div class="d-flex justify-content-between">
        @if (Model.IsOccupied)
        {
            <button type="submit" class="btn btn-danger"
                onclick="return confirm('Are you absolutely sure you want to delete this OCCUPIED storage unit? The occupant (@Model.Occupant?.FullName) will lose access to their storage. This action cannot be undone.');">
                Force Delete (Occupied Unit)
            </button>
        }
        else
        {
            <button type="submit" class="btn btn-danger"
                onclick="return confirm('Are you sure you want to delete this storage unit? This action cannot be undone.');">
                Confirm Delete
            </button>
        }
        <div>
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Cancel</a>
            <a asp-action="Index" asp-route-facilityId="@Model.FacilityId" class="btn btn-outline-info">Back to
                Units</a>
        </div>
    </div>
</form>
